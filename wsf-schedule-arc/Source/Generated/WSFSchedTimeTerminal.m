/*
	WSFSchedTimeTerminal.h
	The implementation of properties and methods for the WSFSchedTimeTerminal object.
	Generated by SudzC.com
*/
#import "WSFSchedTimeTerminal.h"

#import "WSFArrayOfSchedAnnotation.h"
@implementation WSFSchedTimeTerminal
	@synthesize JourneyTerminalID = _JourneyTerminalID;
	@synthesize TerminalID = _TerminalID;
	@synthesize TerminalDescription = _TerminalDescription;
	@synthesize TerminalBriefDescription = _TerminalBriefDescription;
	@synthesize Time = _Time;
	@synthesize DepArrIndicator = _DepArrIndicator;
	@synthesize IsNA = _IsNA;
	@synthesize Annotations = _Annotations;

	- (id) init
	{
		if(self = [super init])
		{
			self.TerminalDescription = nil;
			self.TerminalBriefDescription = nil;
			self.Time = nil;
			self.DepArrIndicator = nil;
			self.Annotations = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (WSFSchedTimeTerminal*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (WSFSchedTimeTerminal*)[[WSFSchedTimeTerminal alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.JourneyTerminalID = [[Soap getNodeValue: node withName: @"JourneyTerminalID"] intValue];
			self.TerminalID = [[Soap getNodeValue: node withName: @"TerminalID"] intValue];
			self.TerminalDescription = [Soap getNodeValue: node withName: @"TerminalDescription"];
			self.TerminalBriefDescription = [Soap getNodeValue: node withName: @"TerminalBriefDescription"];
			self.Time = [Soap dateFromString: [Soap getNodeValue: node withName: @"Time"]];
			self.DepArrIndicator = [Soap getNodeValue: node withName: @"DepArrIndicator"];
			self.IsNA = [[Soap getNodeValue: node withName: @"IsNA"] boolValue];
			self.Annotations = [[WSFArrayOfSchedAnnotation createWithNode: [Soap getNode: node withName: @"Annotations"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SchedTimeTerminal"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<JourneyTerminalID>%@</JourneyTerminalID>", [NSString stringWithFormat: @"%i", self.JourneyTerminalID]];
		[s appendFormat: @"<TerminalID>%@</TerminalID>", [NSString stringWithFormat: @"%i", self.TerminalID]];
		if (self.TerminalDescription != nil) [s appendFormat: @"<TerminalDescription>%@</TerminalDescription>", [[self.TerminalDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TerminalBriefDescription != nil) [s appendFormat: @"<TerminalBriefDescription>%@</TerminalBriefDescription>", [[self.TerminalBriefDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Time != nil) [s appendFormat: @"<Time>%@</Time>", [Soap getDateString: self.Time]];
		if (self.DepArrIndicator != nil) [s appendFormat: @"<DepArrIndicator>%@</DepArrIndicator>", [[self.DepArrIndicator stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<IsNA>%@</IsNA>", (self.IsNA)?@"true":@"false"];
		if (self.Annotations != nil && self.Annotations.count > 0) {
			[s appendFormat: @"<Annotations>%@</Annotations>", [WSFArrayOfSchedAnnotation serialize: self.Annotations]];
		} else {
			[s appendString: @"<Annotations/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[WSFSchedTimeTerminal class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
