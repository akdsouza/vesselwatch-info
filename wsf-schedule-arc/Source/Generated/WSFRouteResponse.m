/*
	WSFRouteResponse.h
	The implementation of properties and methods for the WSFRouteResponse object.
	Generated by SudzC.com
*/
#import "WSFRouteResponse.h"

#import "WSFArrayOfRouteAlert.h"
@implementation WSFRouteResponse
	@synthesize RouteID = _RouteID;
	@synthesize RouteAbbrev = _RouteAbbrev;
	@synthesize Description = _Description;
	@synthesize RegionID = _RegionID;
	@synthesize VesselWatchID = _VesselWatchID;
	@synthesize ReservationFlag = _ReservationFlag;
	@synthesize InternationalFlag = _InternationalFlag;
	@synthesize PassengerOnlyFlag = _PassengerOnlyFlag;
	@synthesize CrossingTime = _CrossingTime;
	@synthesize AdaNotes = _AdaNotes;
	@synthesize GeneralRouteNotes = _GeneralRouteNotes;
	@synthesize SeasonalRouteNotes = _SeasonalRouteNotes;
	@synthesize Alerts = _Alerts;

	- (id) init
	{
		if(self = [super init])
		{
			self.RouteAbbrev = nil;
			self.Description = nil;
			self.CrossingTime = nil;
			self.AdaNotes = nil;
			self.GeneralRouteNotes = nil;
			self.SeasonalRouteNotes = nil;
			self.Alerts = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (WSFRouteResponse*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (WSFRouteResponse*)[[WSFRouteResponse alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.RouteID = [[Soap getNodeValue: node withName: @"RouteID"] intValue];
			self.RouteAbbrev = [Soap getNodeValue: node withName: @"RouteAbbrev"];
			self.Description = [Soap getNodeValue: node withName: @"Description"];
			self.RegionID = [[Soap getNodeValue: node withName: @"RegionID"] intValue];
			self.VesselWatchID = [[Soap getNodeValue: node withName: @"VesselWatchID"] intValue];
			self.ReservationFlag = [[Soap getNodeValue: node withName: @"ReservationFlag"] boolValue];
			self.InternationalFlag = [[Soap getNodeValue: node withName: @"InternationalFlag"] boolValue];
			self.PassengerOnlyFlag = [[Soap getNodeValue: node withName: @"PassengerOnlyFlag"] boolValue];
			self.CrossingTime = [Soap getNodeValue: node withName: @"CrossingTime"];
			self.AdaNotes = [Soap getNodeValue: node withName: @"AdaNotes"];
			self.GeneralRouteNotes = [Soap getNodeValue: node withName: @"GeneralRouteNotes"];
			self.SeasonalRouteNotes = [Soap getNodeValue: node withName: @"SeasonalRouteNotes"];
			self.Alerts = [[WSFArrayOfRouteAlert createWithNode: [Soap getNode: node withName: @"Alerts"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RouteResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<RouteID>%@</RouteID>", [NSString stringWithFormat: @"%i", self.RouteID]];
		if (self.RouteAbbrev != nil) [s appendFormat: @"<RouteAbbrev>%@</RouteAbbrev>", [[self.RouteAbbrev stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Description != nil) [s appendFormat: @"<Description>%@</Description>", [[self.Description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<RegionID>%@</RegionID>", [NSString stringWithFormat: @"%i", self.RegionID]];
		[s appendFormat: @"<VesselWatchID>%@</VesselWatchID>", [NSString stringWithFormat: @"%i", self.VesselWatchID]];
		[s appendFormat: @"<ReservationFlag>%@</ReservationFlag>", (self.ReservationFlag)?@"true":@"false"];
		[s appendFormat: @"<InternationalFlag>%@</InternationalFlag>", (self.InternationalFlag)?@"true":@"false"];
		[s appendFormat: @"<PassengerOnlyFlag>%@</PassengerOnlyFlag>", (self.PassengerOnlyFlag)?@"true":@"false"];
		if (self.CrossingTime != nil) [s appendFormat: @"<CrossingTime>%@</CrossingTime>", [[self.CrossingTime stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AdaNotes != nil) [s appendFormat: @"<AdaNotes>%@</AdaNotes>", [[self.AdaNotes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GeneralRouteNotes != nil) [s appendFormat: @"<GeneralRouteNotes>%@</GeneralRouteNotes>", [[self.GeneralRouteNotes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SeasonalRouteNotes != nil) [s appendFormat: @"<SeasonalRouteNotes>%@</SeasonalRouteNotes>", [[self.SeasonalRouteNotes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Alerts != nil && self.Alerts.count > 0) {
			[s appendFormat: @"<Alerts>%@</Alerts>", [WSFArrayOfRouteAlert serialize: self.Alerts]];
		} else {
			[s appendString: @"<Alerts/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[WSFRouteResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
