/*
	WSFSchedSailingResponse.h
	The implementation of properties and methods for the WSFSchedSailingResponse object.
	Generated by SudzC.com
*/
#import "WSFSchedSailingResponse.h"

#import "WSFArrayOfSchedSailingDateRange.h"
#import "WSFArrayOfSchedJourn.h"
@implementation WSFSchedSailingResponse
	@synthesize ScheduleID = _ScheduleID;
	@synthesize SchedRouteID = _SchedRouteID;
	@synthesize RouteID = _RouteID;
	@synthesize SailingID = _SailingID;
	@synthesize SailingDescription = _SailingDescription;
	@synthesize SailingNotes = _SailingNotes;
	@synthesize DisplayColNum = _DisplayColNum;
	@synthesize SailingDir = _SailingDir;
	@synthesize DayOpDescription = _DayOpDescription;
	@synthesize DayOpUseForHoliday = _DayOpUseForHoliday;
	@synthesize ActiveDateRanges = _ActiveDateRanges;
	@synthesize Journs = _Journs;

	- (id) init
	{
		if(self = [super init])
		{
			self.SailingDescription = nil;
			self.SailingNotes = nil;
			self.SailingDir = nil;
			self.DayOpDescription = nil;
			self.ActiveDateRanges = [[NSMutableArray alloc] init];
			self.Journs = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (WSFSchedSailingResponse*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (WSFSchedSailingResponse*)[[WSFSchedSailingResponse alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ScheduleID = [[Soap getNodeValue: node withName: @"ScheduleID"] intValue];
			self.SchedRouteID = [[Soap getNodeValue: node withName: @"SchedRouteID"] intValue];
			self.RouteID = [[Soap getNodeValue: node withName: @"RouteID"] intValue];
			self.SailingID = [[Soap getNodeValue: node withName: @"SailingID"] intValue];
			self.SailingDescription = [Soap getNodeValue: node withName: @"SailingDescription"];
			self.SailingNotes = [Soap getNodeValue: node withName: @"SailingNotes"];
			self.DisplayColNum = [[Soap getNodeValue: node withName: @"DisplayColNum"] intValue];
			self.SailingDir = [Soap getNodeValue: node withName: @"SailingDir"];
			self.DayOpDescription = [Soap getNodeValue: node withName: @"DayOpDescription"];
			self.DayOpUseForHoliday = [[Soap getNodeValue: node withName: @"DayOpUseForHoliday"] boolValue];
			self.ActiveDateRanges = [[WSFArrayOfSchedSailingDateRange createWithNode: [Soap getNode: node withName: @"ActiveDateRanges"]] object];
			self.Journs = [[WSFArrayOfSchedJourn createWithNode: [Soap getNode: node withName: @"Journs"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SchedSailingResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<ScheduleID>%@</ScheduleID>", [NSString stringWithFormat: @"%i", self.ScheduleID]];
		[s appendFormat: @"<SchedRouteID>%@</SchedRouteID>", [NSString stringWithFormat: @"%i", self.SchedRouteID]];
		[s appendFormat: @"<RouteID>%@</RouteID>", [NSString stringWithFormat: @"%i", self.RouteID]];
		[s appendFormat: @"<SailingID>%@</SailingID>", [NSString stringWithFormat: @"%i", self.SailingID]];
		if (self.SailingDescription != nil) [s appendFormat: @"<SailingDescription>%@</SailingDescription>", [[self.SailingDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SailingNotes != nil) [s appendFormat: @"<SailingNotes>%@</SailingNotes>", [[self.SailingNotes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DisplayColNum>%@</DisplayColNum>", [NSString stringWithFormat: @"%i", self.DisplayColNum]];
		if (self.SailingDir != nil) [s appendFormat: @"<SailingDir>%@</SailingDir>", [[self.SailingDir stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DayOpDescription != nil) [s appendFormat: @"<DayOpDescription>%@</DayOpDescription>", [[self.DayOpDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DayOpUseForHoliday>%@</DayOpUseForHoliday>", (self.DayOpUseForHoliday)?@"true":@"false"];
		if (self.ActiveDateRanges != nil && self.ActiveDateRanges.count > 0) {
			[s appendFormat: @"<ActiveDateRanges>%@</ActiveDateRanges>", [WSFArrayOfSchedSailingDateRange serialize: self.ActiveDateRanges]];
		} else {
			[s appendString: @"<ActiveDateRanges/>"];
		}
		if (self.Journs != nil && self.Journs.count > 0) {
			[s appendFormat: @"<Journs>%@</Journs>", [WSFArrayOfSchedJourn serialize: self.Journs]];
		} else {
			[s appendString: @"<Journs/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[WSFSchedSailingResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
