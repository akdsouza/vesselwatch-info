/*
	WSFWSF_x0020_Schedule.m
	The implementation classes and methods for the WSF_x0020_Schedule web service.
	Generated by SudzC.com
*/

#import "WSFWSF_x0020_Schedule.h"
				
#import "Soap.h"
	
#import "WSFAPIAccessHeader.h"
#import "WSFArrayOfInt.h"
#import "WSFTripDateMsg.h"
#import "WSFRouteAlert.h"
#import "WSFRouteBriefAlert.h"
#import "WSFTerminalResponse.h"
#import "WSFTerminalComboResponse.h"
#import "WSFSchedSailingDateRange.h"
#import "WSFSchedAnnotation.h"
#import "WSFRouteMsg.h"
#import "WSFTerminalComboMsg.h"
#import "WSFSchedMsg.h"
#import "WSFSchedRouteMsg.h"
#import "WSFArrayOfString.h"
#import "WSFTerminalMsg.h"
#import "WSFRouteBriefMsg.h"
#import "WSFRouteTodayMsg.h"
#import "WSFTerminalComboTodayMsg.h"
#import "WSFValidDateRangeResponse.h"
#import "WSFArrayOfSchedBriefResponse.h"
#import "WSFSchedBriefResponse.h"
#import "WSFArrayOfAlertResponse.h"
#import "WSFAlertResponse.h"
#import "WSFArrayOfRouteResponse.h"
#import "WSFRouteResponse.h"
#import "WSFArrayOfRouteAlert.h"
#import "WSFArrayOfRouteBriefResponse.h"
#import "WSFRouteBriefResponse.h"
#import "WSFArrayOfRouteBriefAlert.h"
#import "WSFArrayOfSchedRouteBriefResponse.h"
#import "WSFArrayOfSchedRouteAdj.h"
#import "WSFSchedRouteAdj.h"
#import "WSFArrayOfTerminalResponse.h"
#import "WSFArrayOfTerminalComboResponse.h"
#import "WSFArrayOfSchedTimeAdjResponse.h"
#import "WSFArrayOfSchedAnnotation.h"
#import "WSFArrayOfSchedSailingResponse.h"
#import "WSFArrayOfSchedSailingDateRange.h"
#import "WSFArrayOfSchedJourn.h"
#import "WSFSchedJourn.h"
#import "WSFArrayOfSchedTimeTerminal.h"
#import "WSFArrayOfSchedTerminalCombo.h"
#import "WSFArrayOfSchedTime.h"
#import "WSFSchedRouteBriefResponse.h"
#import "WSFSchedTimeTerminal.h"
#import "WSFSchedTerminalCombo.h"
#import "WSFSchedSailingResponse.h"
#import "WSFSchedResponse.h"
#import "WSFSchedTime.h"
#import "WSFSchedTimeAdjResponse.h"

/* Implementation of the service */
				
@implementation WSFWSF_x0020_Schedule

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://b2b.wsdot.wa.gov/ferries/schedule/Default.asmx";
			self.namespace = @"http://www.wsdot.wa.gov/ferries/schedule/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (WSFWSF_x0020_Schedule*) service {
		return [WSFWSF_x0020_Schedule serviceWithUsername:nil andPassword:nil];
	}
	
	+ (WSFWSF_x0020_Schedule*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[WSFWSF_x0020_Schedule alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns NSMutableArray*. Provides a brief summary of all scheduled sailing seasons that are currently active / available. */
	- (SoapRequest*) GetActiveScheduledSeasons: (id <SoapDelegate>) handler
	{
		return [self GetActiveScheduledSeasons: handler action: nil];
	}

	- (SoapRequest*) GetActiveScheduledSeasons: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetActiveScheduledSeasons" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetActiveScheduledSeasons" postData: _envelope deserializeTo: [WSFArrayOfSchedBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves all published alerts. */
	- (SoapRequest*) GetAllAlerts: (id <SoapDelegate>) handler
	{
		return [self GetAllAlerts: handler action: nil];
	}

	- (SoapRequest*) GetAllAlerts: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetAllAlerts" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllAlerts" postData: _envelope deserializeTo: [WSFArrayOfAlertResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides detailed information for all available routes pertaining to a particular date. */
	- (SoapRequest*) GetAllRouteDetails: (id <SoapDelegate>) handler request: (WSFTripDateMsg*) request
	{
		return [self GetAllRouteDetails: handler action: nil request: request];
	}

	- (SoapRequest*) GetAllRouteDetails: (id) _target action: (SEL) _action request: (WSFTripDateMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllRouteDetails" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllRouteDetails" postData: _envelope deserializeTo: [WSFArrayOfRouteResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides all available routes for a particular date. */
	- (SoapRequest*) GetAllRoutes: (id <SoapDelegate>) handler request: (WSFTripDateMsg*) request
	{
		return [self GetAllRoutes: handler action: nil request: request];
	}

	- (SoapRequest*) GetAllRoutes: (id) _target action: (SEL) _action request: (WSFTripDateMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllRoutes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllRoutes" postData: _envelope deserializeTo: [WSFArrayOfRouteBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides all available routes for a particular date where one or more service disruptions are present. */
	- (SoapRequest*) GetAllRoutesHavingServiceDisruptions: (id <SoapDelegate>) handler request: (WSFTripDateMsg*) request
	{
		return [self GetAllRoutesHavingServiceDisruptions: handler action: nil request: request];
	}

	- (SoapRequest*) GetAllRoutesHavingServiceDisruptions: (id) _target action: (SEL) _action request: (WSFTripDateMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllRoutesHavingServiceDisruptions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllRoutesHavingServiceDisruptions" postData: _envelope deserializeTo: [WSFArrayOfRouteBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves the scheduled route(s) for all seasons that are currently active / available. */
	- (SoapRequest*) GetAllSchedRoutes: (id <SoapDelegate>) handler
	{
		return [self GetAllSchedRoutes: handler action: nil];
	}

	- (SoapRequest*) GetAllSchedRoutes: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetAllSchedRoutes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllSchedRoutes" postData: _envelope deserializeTo: [WSFArrayOfSchedRouteBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides all available terminals for a particular date. */
	- (SoapRequest*) GetAllTerminals: (id <SoapDelegate>) handler request: (WSFTripDateMsg*) request
	{
		return [self GetAllTerminals: handler action: nil request: request];
	}

	- (SoapRequest*) GetAllTerminals: (id) _target action: (SEL) _action request: (WSFTripDateMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllTerminals" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllTerminals" postData: _envelope deserializeTo: [WSFArrayOfTerminalResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. For a given date, retrieves all available terminal combinations. */
	- (SoapRequest*) GetAllTerminalsAndMates: (id <SoapDelegate>) handler request: (WSFTripDateMsg*) request
	{
		return [self GetAllTerminalsAndMates: handler action: nil request: request];
	}

	- (SoapRequest*) GetAllTerminalsAndMates: (id) _target action: (SEL) _action request: (WSFTripDateMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetAllTerminalsAndMates" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllTerminalsAndMates" postData: _envelope deserializeTo: [WSFArrayOfTerminalComboResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides a list of all individual time adjustments (additions or cancellations) that are currently active / available. */
	- (SoapRequest*) GetAllTimeAdj: (id <SoapDelegate>) handler
	{
		return [self GetAllTimeAdj: handler action: nil];
	}

	- (SoapRequest*) GetAllTimeAdj: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetAllTimeAdj" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetAllTimeAdj" postData: _envelope deserializeTo: [WSFArrayOfSchedTimeAdjResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSDate*. Most web methods in this service are cached.  If you are also using caching in your user interface, it may be helpful to know the date and time that the cache was last flushed in this web service. */
	- (SoapRequest*) GetCacheFlushDate: (id <SoapDelegate>) handler
	{
		return [self GetCacheFlushDate: handler action: nil];
	}

	- (SoapRequest*) GetCacheFlushDate: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetCacheFlushDate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetCacheFlushDate" postData: _envelope deserializeTo: @"NSDate"];
		[_request send];
		return _request;
	}

	/* Returns WSFRouteResponse*. Retrieves detailed information pertaining to a scheduled route. */
	- (SoapRequest*) GetRouteDetail: (id <SoapDelegate>) handler request: (WSFRouteMsg*) request
	{
		return [self GetRouteDetail: handler action: nil request: request];
	}

	- (SoapRequest*) GetRouteDetail: (id) _target action: (SEL) _action request: (WSFRouteMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetRouteDetail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetRouteDetail" postData: _envelope deserializeTo: [WSFRouteResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves detailed information for scheduled routes that are associated with a particular terminal combination. */
	- (SoapRequest*) GetRouteDetailsByTerminalCombo: (id <SoapDelegate>) handler request: (WSFTerminalComboMsg*) request
	{
		return [self GetRouteDetailsByTerminalCombo: handler action: nil request: request];
	}

	- (SoapRequest*) GetRouteDetailsByTerminalCombo: (id) _target action: (SEL) _action request: (WSFTerminalComboMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetRouteDetailsByTerminalCombo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetRouteDetailsByTerminalCombo" postData: _envelope deserializeTo: [WSFArrayOfRouteResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves route(s) for a particular date and terminal combination. */
	- (SoapRequest*) GetRoutesByTerminalCombo: (id <SoapDelegate>) handler request: (WSFTerminalComboMsg*) request
	{
		return [self GetRoutesByTerminalCombo: handler action: nil request: request];
	}

	- (SoapRequest*) GetRoutesByTerminalCombo: (id) _target action: (SEL) _action request: (WSFTerminalComboMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetRoutesByTerminalCombo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetRoutesByTerminalCombo" postData: _envelope deserializeTo: [WSFArrayOfRouteBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves scheduled route(s) for a particular active season. */
	- (SoapRequest*) GetSchedRoutesByScheduledSeason: (id <SoapDelegate>) handler request: (WSFSchedMsg*) request
	{
		return [self GetSchedRoutesByScheduledSeason: handler action: nil request: request];
	}

	- (SoapRequest*) GetSchedRoutesByScheduledSeason: (id) _target action: (SEL) _action request: (WSFSchedMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetSchedRoutesByScheduledSeason" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetSchedRoutesByScheduledSeason" postData: _envelope deserializeTo: [WSFArrayOfSchedRouteBriefResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Retrieves sailings and departure/arrival times that correspond with a particular scheduled route. */
	- (SoapRequest*) GetSchedSailingsBySchedRoute: (id <SoapDelegate>) handler request: (WSFSchedRouteMsg*) request
	{
		return [self GetSchedSailingsBySchedRoute: handler action: nil request: request];
	}

	- (SoapRequest*) GetSchedSailingsBySchedRoute: (id) _target action: (SEL) _action request: (WSFSchedRouteMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetSchedSailingsBySchedRoute" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetSchedSailingsBySchedRoute" postData: _envelope deserializeTo: [WSFArrayOfSchedSailingResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns WSFSchedResponse*. Retrieves sailing times associated with a specific route for a particular date. */
	- (SoapRequest*) GetScheduleByRoute: (id <SoapDelegate>) handler request: (WSFRouteMsg*) request
	{
		return [self GetScheduleByRoute: handler action: nil request: request];
	}

	- (SoapRequest*) GetScheduleByRoute: (id) _target action: (SEL) _action request: (WSFRouteMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetScheduleByRoute" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetScheduleByRoute" postData: _envelope deserializeTo: [WSFSchedResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns WSFSchedResponse*. Retrieves sailing times associated with a specific departing / arriving terminal combination for a particular date. */
	- (SoapRequest*) GetScheduleByTerminalCombo: (id <SoapDelegate>) handler request: (WSFTerminalComboMsg*) request
	{
		return [self GetScheduleByTerminalCombo: handler action: nil request: request];
	}

	- (SoapRequest*) GetScheduleByTerminalCombo: (id) _target action: (SEL) _action request: (WSFTerminalComboMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetScheduleByTerminalCombo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetScheduleByTerminalCombo" postData: _envelope deserializeTo: [WSFSchedResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides all available terminals that correspond to a given terminal for a particular date. */
	- (SoapRequest*) GetTerminalMates: (id <SoapDelegate>) handler request: (WSFTerminalMsg*) request
	{
		return [self GetTerminalMates: handler action: nil request: request];
	}

	- (SoapRequest*) GetTerminalMates: (id) _target action: (SEL) _action request: (WSFTerminalMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTerminalMates" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetTerminalMates" postData: _envelope deserializeTo: [WSFArrayOfTerminalResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides a list of individual time adjustments (additions or cancellations) for a particular route. */
	- (SoapRequest*) GetTimeAdjByRoute: (id <SoapDelegate>) handler request: (WSFRouteBriefMsg*) request
	{
		return [self GetTimeAdjByRoute: handler action: nil request: request];
	}

	- (SoapRequest*) GetTimeAdjByRoute: (id) _target action: (SEL) _action request: (WSFRouteBriefMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTimeAdjByRoute" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetTimeAdjByRoute" postData: _envelope deserializeTo: [WSFArrayOfSchedTimeAdjResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*. Provides a list of individual time adjustments (additions or cancellations) for a particular scheduled route. */
	- (SoapRequest*) GetTimeAdjBySchedRoute: (id <SoapDelegate>) handler request: (WSFSchedRouteMsg*) request
	{
		return [self GetTimeAdjBySchedRoute: handler action: nil request: request];
	}

	- (SoapRequest*) GetTimeAdjBySchedRoute: (id) _target action: (SEL) _action request: (WSFSchedRouteMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTimeAdjBySchedRoute" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetTimeAdjBySchedRoute" postData: _envelope deserializeTo: [WSFArrayOfSchedTimeAdjResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns WSFSchedResponse*. Retrieves sailing times associated with a specific route for the current date.  User may specify if only the times for the remainder of this sailing date are required. */
	- (SoapRequest*) GetTodaysScheduleByRoute: (id <SoapDelegate>) handler request: (WSFRouteTodayMsg*) request
	{
		return [self GetTodaysScheduleByRoute: handler action: nil request: request];
	}

	- (SoapRequest*) GetTodaysScheduleByRoute: (id) _target action: (SEL) _action request: (WSFRouteTodayMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTodaysScheduleByRoute" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetTodaysScheduleByRoute" postData: _envelope deserializeTo: [WSFSchedResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns WSFSchedResponse*. Retrieves sailing times associated with a specific departing / arriving terminal combination for the current date.  User may specify if only the times for the remainder of this sailing date are required. */
	- (SoapRequest*) GetTodaysScheduleByTerminalCombo: (id <SoapDelegate>) handler request: (WSFTerminalComboTodayMsg*) request
	{
		return [self GetTodaysScheduleByTerminalCombo: handler action: nil request: request];
	}

	- (SoapRequest*) GetTodaysScheduleByTerminalCombo: (id) _target action: (SEL) _action request: (WSFTerminalComboTodayMsg*) request
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: request forName: @"request"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTodaysScheduleByTerminalCombo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetTodaysScheduleByTerminalCombo" postData: _envelope deserializeTo: [WSFSchedResponse alloc]];
		[_request send];
		return _request;
	}

	/* Returns WSFValidDateRangeResponse*. Reveals a valid date range for retrieving schedule data.  This begins with today's date and extends to the end of the most recently posted schedule. */
	- (SoapRequest*) GetValidDateRange: (id <SoapDelegate>) handler
	{
		return [self GetValidDateRange: handler action: nil];
	}

	- (SoapRequest*) GetValidDateRange: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"GetValidDateRange" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.wsdot.wa.gov/ferries/schedule/GetValidDateRange" postData: _envelope deserializeTo: [WSFValidDateRangeResponse alloc]];
		[_request send];
		return _request;
	}


@end
	