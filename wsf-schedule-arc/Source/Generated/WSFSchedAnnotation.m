/*
	WSFSchedAnnotation.h
	The implementation of properties and methods for the WSFSchedAnnotation object.
	Generated by SudzC.com
*/
#import "WSFSchedAnnotation.h"

@implementation WSFSchedAnnotation
	@synthesize AnnotationID = _AnnotationID;
	@synthesize AnnotationText = _AnnotationText;
	@synthesize AnnotationIVRText = _AnnotationIVRText;
	@synthesize AdjustedCrossingTime = _AdjustedCrossingTime;
	@synthesize AnnotationImg = _AnnotationImg;
	@synthesize TypeDescription = _TypeDescription;
	@synthesize SortSeq = _SortSeq;

	- (id) init
	{
		if(self = [super init])
		{
			self.AnnotationText = nil;
			self.AnnotationIVRText = nil;
			self.AnnotationImg = nil;
			self.TypeDescription = nil;

		}
		return self;
	}

	+ (WSFSchedAnnotation*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (WSFSchedAnnotation*)[[WSFSchedAnnotation alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.AnnotationID = [[Soap getNodeValue: node withName: @"AnnotationID"] intValue];
			self.AnnotationText = [Soap getNodeValue: node withName: @"AnnotationText"];
			self.AnnotationIVRText = [Soap getNodeValue: node withName: @"AnnotationIVRText"];
			self.AdjustedCrossingTime = [[Soap getNodeValue: node withName: @"AdjustedCrossingTime"] intValue];
			self.AnnotationImg = [Soap getNodeValue: node withName: @"AnnotationImg"];
			self.TypeDescription = [Soap getNodeValue: node withName: @"TypeDescription"];
			self.SortSeq = [[Soap getNodeValue: node withName: @"SortSeq"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SchedAnnotation"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<AnnotationID>%@</AnnotationID>", [NSString stringWithFormat: @"%i", self.AnnotationID]];
		if (self.AnnotationText != nil) [s appendFormat: @"<AnnotationText>%@</AnnotationText>", [[self.AnnotationText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AnnotationIVRText != nil) [s appendFormat: @"<AnnotationIVRText>%@</AnnotationIVRText>", [[self.AnnotationIVRText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<AdjustedCrossingTime>%@</AdjustedCrossingTime>", [NSString stringWithFormat: @"%i", self.AdjustedCrossingTime]];
		if (self.AnnotationImg != nil) [s appendFormat: @"<AnnotationImg>%@</AnnotationImg>", [[self.AnnotationImg stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TypeDescription != nil) [s appendFormat: @"<TypeDescription>%@</TypeDescription>", [[self.TypeDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<SortSeq>%@</SortSeq>", [NSString stringWithFormat: @"%i", self.SortSeq]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[WSFSchedAnnotation class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
