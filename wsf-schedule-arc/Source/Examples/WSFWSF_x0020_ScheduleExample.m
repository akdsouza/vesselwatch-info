/*
	WSFWSF_x0020_ScheduleExample.m
	Provides example and test runs the service's proxy methods.
	Generated by SudzC.com
*/
#import "WSFWSF_x0020_ScheduleExample.h"
#import "WSFWSF_x0020_Schedule.h"

@implementation WSFWSF_x0020_ScheduleExample

- (void)run {
	// Create the service
	WSFWSF_x0020_Schedule* service = [WSFWSF_x0020_Schedule service];
	service.logging = YES;
	// service.username = @"username";
	// service.password = @"password";
	

	// Returns NSMutableArray*. Provides a brief summary of all scheduled sailing seasons that are currently active / available.
	[service GetActiveScheduledSeasons:self action:@selector(GetActiveScheduledSeasonsHandler:)];

	// Returns NSMutableArray*. Retrieves all published alerts.
	[service GetAllAlerts:self action:@selector(GetAllAlertsHandler:)];

	// Returns NSMutableArray*. Provides detailed information for all available routes pertaining to a particular date.
	[service GetAllRouteDetails:self action:@selector(GetAllRouteDetailsHandler:) request: [[WSFTripDateMsg alloc] init]];

	// Returns NSMutableArray*. Provides all available routes for a particular date.
	[service GetAllRoutes:self action:@selector(GetAllRoutesHandler:) request: [[WSFTripDateMsg alloc] init]];

	// Returns NSMutableArray*. Provides all available routes for a particular date where one or more service disruptions are present.
	[service GetAllRoutesHavingServiceDisruptions:self action:@selector(GetAllRoutesHavingServiceDisruptionsHandler:) request: [[WSFTripDateMsg alloc] init]];

	// Returns NSMutableArray*. Retrieves the scheduled route(s) for all seasons that are currently active / available.
	[service GetAllSchedRoutes:self action:@selector(GetAllSchedRoutesHandler:)];

	// Returns NSMutableArray*. Provides all available terminals for a particular date.
	[service GetAllTerminals:self action:@selector(GetAllTerminalsHandler:) request: [[WSFTripDateMsg alloc] init]];

	// Returns NSMutableArray*. For a given date, retrieves all available terminal combinations.
	[service GetAllTerminalsAndMates:self action:@selector(GetAllTerminalsAndMatesHandler:) request: [[WSFTripDateMsg alloc] init]];

	// Returns NSMutableArray*. Provides a list of all individual time adjustments (additions or cancellations) that are currently active / available.
	[service GetAllTimeAdj:self action:@selector(GetAllTimeAdjHandler:)];

	// Returns NSDate*. Most web methods in this service are cached.  If you are also using caching in your user interface, it may be helpful to know the date and time that the cache was last flushed in this web service.
	[service GetCacheFlushDate:self action:@selector(GetCacheFlushDateHandler:)];

	// Returns WSFRouteResponse*. Retrieves detailed information pertaining to a scheduled route.
	[service GetRouteDetail:self action:@selector(GetRouteDetailHandler:) request: [[WSFRouteMsg alloc] init]];

	// Returns NSMutableArray*. Retrieves detailed information for scheduled routes that are associated with a particular terminal combination.
	[service GetRouteDetailsByTerminalCombo:self action:@selector(GetRouteDetailsByTerminalComboHandler:) request: [[WSFTerminalComboMsg alloc] init]];

	// Returns NSMutableArray*. Retrieves route(s) for a particular date and terminal combination.
	[service GetRoutesByTerminalCombo:self action:@selector(GetRoutesByTerminalComboHandler:) request: [[WSFTerminalComboMsg alloc] init]];

	// Returns NSMutableArray*. Retrieves scheduled route(s) for a particular active season.
	[service GetSchedRoutesByScheduledSeason:self action:@selector(GetSchedRoutesByScheduledSeasonHandler:) request: [[WSFSchedMsg alloc] init]];

	// Returns NSMutableArray*. Retrieves sailings and departure/arrival times that correspond with a particular scheduled route.
	[service GetSchedSailingsBySchedRoute:self action:@selector(GetSchedSailingsBySchedRouteHandler:) request: [[WSFSchedRouteMsg alloc] init]];

	// Returns WSFSchedResponse*. Retrieves sailing times associated with a specific route for a particular date.
	[service GetScheduleByRoute:self action:@selector(GetScheduleByRouteHandler:) request: [[WSFRouteMsg alloc] init]];

	// Returns WSFSchedResponse*. Retrieves sailing times associated with a specific departing / arriving terminal combination for a particular date.
	[service GetScheduleByTerminalCombo:self action:@selector(GetScheduleByTerminalComboHandler:) request: [[WSFTerminalComboMsg alloc] init]];

	// Returns NSMutableArray*. Provides all available terminals that correspond to a given terminal for a particular date.
	[service GetTerminalMates:self action:@selector(GetTerminalMatesHandler:) request: [[WSFTerminalMsg alloc] init]];

	// Returns NSMutableArray*. Provides a list of individual time adjustments (additions or cancellations) for a particular route.
	[service GetTimeAdjByRoute:self action:@selector(GetTimeAdjByRouteHandler:) request: [[WSFRouteBriefMsg alloc] init]];

	// Returns NSMutableArray*. Provides a list of individual time adjustments (additions or cancellations) for a particular scheduled route.
	[service GetTimeAdjBySchedRoute:self action:@selector(GetTimeAdjBySchedRouteHandler:) request: [[WSFSchedRouteMsg alloc] init]];

	// Returns WSFSchedResponse*. Retrieves sailing times associated with a specific route for the current date.  User may specify if only the times for the remainder of this sailing date are required.
	[service GetTodaysScheduleByRoute:self action:@selector(GetTodaysScheduleByRouteHandler:) request: [[WSFRouteTodayMsg alloc] init]];

	// Returns WSFSchedResponse*. Retrieves sailing times associated with a specific departing / arriving terminal combination for the current date.  User may specify if only the times for the remainder of this sailing date are required.
	[service GetTodaysScheduleByTerminalCombo:self action:@selector(GetTodaysScheduleByTerminalComboHandler:) request: [[WSFTerminalComboTodayMsg alloc] init]];

	// Returns WSFValidDateRangeResponse*. Reveals a valid date range for retrieving schedule data.  This begins with today's date and extends to the end of the most recently posted schedule.
	[service GetValidDateRange:self action:@selector(GetValidDateRangeHandler:)];
}

	

// Handle the response from GetActiveScheduledSeasons.
		
- (void) GetActiveScheduledSeasonsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetActiveScheduledSeasons returned the value: %@", result);
			
}
	

// Handle the response from GetAllAlerts.
		
- (void) GetAllAlertsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllAlerts returned the value: %@", result);
			
}
	

// Handle the response from GetAllRouteDetails.
		
- (void) GetAllRouteDetailsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllRouteDetails returned the value: %@", result);
			
}
	

// Handle the response from GetAllRoutes.
		
- (void) GetAllRoutesHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllRoutes returned the value: %@", result);
			
}
	

// Handle the response from GetAllRoutesHavingServiceDisruptions.
		
- (void) GetAllRoutesHavingServiceDisruptionsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllRoutesHavingServiceDisruptions returned the value: %@", result);
			
}
	

// Handle the response from GetAllSchedRoutes.
		
- (void) GetAllSchedRoutesHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllSchedRoutes returned the value: %@", result);
			
}
	

// Handle the response from GetAllTerminals.
		
- (void) GetAllTerminalsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllTerminals returned the value: %@", result);
			
}
	

// Handle the response from GetAllTerminalsAndMates.
		
- (void) GetAllTerminalsAndMatesHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllTerminalsAndMates returned the value: %@", result);
			
}
	

// Handle the response from GetAllTimeAdj.
		
- (void) GetAllTimeAdjHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetAllTimeAdj returned the value: %@", result);
			
}
	

// Handle the response from GetCacheFlushDate.
		
- (void) GetCacheFlushDateHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSDate* result
		NSDate* result = (NSDate*)value;
	NSLog(@"GetCacheFlushDate returned the value: %@", result);
			
}
	

// Handle the response from GetRouteDetail.
		
- (void) GetRouteDetailHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFRouteResponse* result
		WSFRouteResponse* result = (WSFRouteResponse*)value;
	NSLog(@"GetRouteDetail returned the value: %@", result);
			
}
	

// Handle the response from GetRouteDetailsByTerminalCombo.
		
- (void) GetRouteDetailsByTerminalComboHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetRouteDetailsByTerminalCombo returned the value: %@", result);
			
}
	

// Handle the response from GetRoutesByTerminalCombo.
		
- (void) GetRoutesByTerminalComboHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetRoutesByTerminalCombo returned the value: %@", result);
			
}
	

// Handle the response from GetSchedRoutesByScheduledSeason.
		
- (void) GetSchedRoutesByScheduledSeasonHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetSchedRoutesByScheduledSeason returned the value: %@", result);
			
}
	

// Handle the response from GetSchedSailingsBySchedRoute.
		
- (void) GetSchedSailingsBySchedRouteHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetSchedSailingsBySchedRoute returned the value: %@", result);
			
}
	

// Handle the response from GetScheduleByRoute.
		
- (void) GetScheduleByRouteHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFSchedResponse* result
		WSFSchedResponse* result = (WSFSchedResponse*)value;
	NSLog(@"GetScheduleByRoute returned the value: %@", result);
			
}
	

// Handle the response from GetScheduleByTerminalCombo.
		
- (void) GetScheduleByTerminalComboHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFSchedResponse* result
		WSFSchedResponse* result = (WSFSchedResponse*)value;
	NSLog(@"GetScheduleByTerminalCombo returned the value: %@", result);
			
}
	

// Handle the response from GetTerminalMates.
		
- (void) GetTerminalMatesHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetTerminalMates returned the value: %@", result);
			
}
	

// Handle the response from GetTimeAdjByRoute.
		
- (void) GetTimeAdjByRouteHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetTimeAdjByRoute returned the value: %@", result);
			
}
	

// Handle the response from GetTimeAdjBySchedRoute.
		
- (void) GetTimeAdjBySchedRouteHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSMutableArray* result
		NSMutableArray* result = (NSMutableArray*)value;
	NSLog(@"GetTimeAdjBySchedRoute returned the value: %@", result);
			
}
	

// Handle the response from GetTodaysScheduleByRoute.
		
- (void) GetTodaysScheduleByRouteHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFSchedResponse* result
		WSFSchedResponse* result = (WSFSchedResponse*)value;
	NSLog(@"GetTodaysScheduleByRoute returned the value: %@", result);
			
}
	

// Handle the response from GetTodaysScheduleByTerminalCombo.
		
- (void) GetTodaysScheduleByTerminalComboHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFSchedResponse* result
		WSFSchedResponse* result = (WSFSchedResponse*)value;
	NSLog(@"GetTodaysScheduleByTerminalCombo returned the value: %@", result);
			
}
	

// Handle the response from GetValidDateRange.
		
- (void) GetValidDateRangeHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the WSFValidDateRangeResponse* result
		WSFValidDateRangeResponse* result = (WSFValidDateRangeResponse*)value;
	NSLog(@"GetValidDateRange returned the value: %@", result);
			
}
	

@end
		